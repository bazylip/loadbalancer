name: Example usage of loadbalancer
on:
  workflow_dispatch:
    inputs:
      num_servers:
        description: Number of servers serving the requests
        required: True
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Prepare configs
        run: |
          sudo apt-get install gcc libpq-dev -y
          sudo apt-get install python-dev  python-pip -y
          sudo apt-get install python3-dev python3-pip python3-venv python3-wheel python3-setuptools -y
          pip3 install wheel
          pip3 install -r requirements.txt
          ./entrypoint.py ${{ github.event.inputs.num_servers }}
      - name: Build and run servers
        run: docker-compose up -d
      - name: Run load generator
        run: |
          python3 tools/load_generator/load_generator.py -a localhost -n 30
      - name: Print docker-compose logs
        run:
          docker-compose logs
      - name: Analyse docker-compose logs
        run: |
          echo "Requests sent: 30\n"
          for num in {1..${{ github.event.inputs.num_servers }}}
          do
            echo "Requests served by server $num:" $(docker-compose logs | grep "server_$num_1.*GET.*")
          done
          # echo "Requests served by server 2:" $(docker-compose logs | grep "server_2_1.*GET.*" | wc -l)
